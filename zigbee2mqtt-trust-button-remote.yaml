blueprint:
  name: Z2M -  Trust button remote
  description: |
    Control lights with an trust remote
  domain: automation
  input:
    remote:
      name: Remote
      description: trust remote to use
      selector:
        entity:
          domain: sensor
    light:
      name: Light(s)
      description: The light(s) to control
      selector:
        target:
          entity:
            domain: light
    force_brightness:
      name: Force turn on brightness
      description: >
        Force the brightness to the set level below, when the "on" button on
        the remote is pushed and lights turn on.
      default: false
      selector:
        boolean:
    brightness:
      name: Brightness
      description: Brightness of the light(s) when turning on
      default: 50
      selector:
        number:
          min: 0
          max: 100
          mode: slider
          step: 1
          unit_of_measurement: "%"
    action_group:
      name: Action group
      description: Action group
      default: 145
      selector:
        number:
          min: 145
          max: 150
          mode: slider
          step: 1

mode: restart
max_exceeded: silent

variables:
  force_brightness: !input force_brightness
  selected_action_group: !input action_group

trigger:
  - platform: state
    entity_id: !input remote

action:
  - variables:
      state: "{{ trigger.to_state.state }}"
      action_group: "{{ trigger.to_state.attributes.action_group }}"
  - choose:
      - conditions:
          - "{{ state == 'on' }}"
          - "{{ action_group == selected_action_group }}"
        sequence:
          - choose:
              - conditions: "{{ force_brightness }}"
                sequence:
                  - service: light.turn_on
                    target: !input light
                    data:
                      transition: 1
                      brightness_pct: !input brightness
            default:
              - service: light.turn_on
                target: !input light
                data:
                  transition: 1
                  
      - conditions:
          - "{{ state == 'off' }}"
          - "{{ action_group == selected_action_group }}"
        sequence:
          - service: light.turn_off
            target: !input light
            data:
              transition: 1
      - conditions:
          - "{{ state == 'up-press' }}"
          - "{{ action_group == selected_action_group }}"
        sequence:
          - repeat:
              until:
                - condition: state
                  entity_id: !input remote
                  state: brightness_up_release
                  attribute: action
              sequence:
                - service: light.turn_on
                  data:
                    brightness_step_pct: 10
                    transition: 1
                  target: !input light
                - delay: '1'

      - conditions:
          - "{{ state == 'down-press' }}"
          - "{{ action_group == selected_action_group }}"
        sequence:
          - repeat:
              until:
                - condition: state
                  entity_id: !input remote
                  state: brightness_down_release
                  attribute: action
              sequence:
                - service: light.turn_on
                  data:
                    brightness_step_pct: -10
                    transition: 1
                  target: !input light
                - delay: '1'
                
